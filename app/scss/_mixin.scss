//MIXINS
@mixin font($fname, $fstyle, $fweight, $furl) {
  @font-face {
    font-family: $fname;
    src: url($furl);
    font-style: $fstyle;
    font-weight: $fweight;
    font-display: swap; // Uncomment to initially display system fonts
  }
}

@mixin _transition($element: all, $time: 0.5s, $timing: ease-in-out) {
  transition: $element ease-in-out $time;
  -webkit-transition: $element ease-in-out $time;
  -moz-transition: $element ease-in-out $time;
  -ms-transition: $element ease-in-out $time;
  -o-transition: $element ease-in-out $time;
}

@mixin _borderRadius($borderRadius) {
  border-radius: $borderRadius;
  -webkit-border-radius: $borderRadius;
  -moz-border-radius: $borderRadius;
  -ms-border-radius: $borderRadius;
  -o-border-radius: $borderRadius;
}

@mixin adaptive($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;
  $vw-context: $maxWidth * 0.01 * 1;
  // $vw-contextMx: $maxWidthMx * 0.01 * 1;

  @if $type==1 {
    //только если меньше контейнера
    #{$property}: $startSize + px;

    @media (max-width: #{$maxWidthContainer} + px) {
      #{$property}: calc(
        #{$minSize + px} + #{$addSize} *
          ((100vw - 320px) / #{$maxWidthContainer - 320})
      );
    }
  } @else if $type==2 {
    //только если больше контейнера
    #{$property}: $startSize + px;

    @media (min-width: #{$maxWidthContainer} + px) {
      #{$property}: calc(
        #{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320})
      );
    }
  } @else if $type==3 {
    #{$property}: calc(
      #{$minSize+px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320})
    );

    // @media only screen and (min-width : 1920px) {
    //   #{$property}:calc((#{$startSize} / #{$vw-context}) * 1vw);
    // }

    @media (min-width: 1152px) {
      #{$property}: calc((#{$startSize} / #{$vw-context}) * 1vw);
    }

    @media (min-width: 2560px) {
      #{$property}: $startSize + px;
    }
  } @else if $type==4 {
    #{$property}: calc(
      #{$minSize+px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320})
    ) !important;

    // @media only screen and (min-width : 1920px) {
    //   #{$property}:calc((#{$startSize} / #{$vw-context}) * 1vw);
    // }

    @media (min-width: 1152px) {
      #{$property}: calc((#{$startSize} / #{$vw-context}) * 1vw) !important;
    }

    @media (min-width: 2560px) {
      #{$property}: $startSize + px !important;
    }
  } @else {
    #{$property}: calc(
      #{$minSize+px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320})
    );

    @media (min-width: 2560px) {
      #{$property}: $startSize + px;
    }
  }
}

@mixin coll($collCount, $collGap) {
  flex: 1 1 calc((100% / #{$collCount}) - #{$collGap});
}

@function get-vw($property) {
  $vw-context: $maxWidth * 0.01 * 1px;
  @return $property / $vw-context * 1vw;
  @return $property;
}
